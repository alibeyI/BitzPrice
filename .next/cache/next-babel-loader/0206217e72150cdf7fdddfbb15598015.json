{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\next\\\\components\\\\Prices.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nvar Prices = function Prices(_ref) {\n  _s();\n\n  var bpi = _ref.bpi;\n\n  var _useState = useState('USD'),\n      currency = _useState[0],\n      setCurrency = _useState[1];\n\n  var list = '';\n\n  if (currency === 'USD') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", bpi.bpi.USD.description, \" : \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 58\n      }\n    }, bpi.code), \" \", __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 114\n      }\n    }, bpi.rate));\n  } else if (currency === 'GBP') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", bpi.description, \" : \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 46\n      }\n    }, bpi.code), \" \", __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 102\n      }\n    }, bpi.rate));\n  } else if (currency === 'EU') {\n    list = __jsx(\"li\", {\n      className: \"list-group-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }\n    }, \"Bitcoin rate for \", bpi.description, \" : \", __jsx(\"span\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 46\n      }\n    }, bpi.code), \" \", __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 102\n      }\n    }, bpi.rate));\n  }\n\n  console.log(bpi);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: \"list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"select\", {\n    onChange: function onChange(e) {\n      return setCurrency(currency = (_readOnlyError(\"currency\"), e.target.value));\n    },\n    className: \"form-control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"USD\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }\n  }, \"USD\"), __jsx(\"option\", {\n    value: \"GBP\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }\n  }, \"GBP\"), __jsx(\"option\", {\n    value: \"EU\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 18\n    }\n  }, \"EU\"))));\n};\n\n_s(Prices, \"IMt9glJKuY0gCtznVFnjeGsjS3E=\");\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["C:/next/components/Prices.js"],"names":["React","useState","Prices","bpi","currency","setCurrency","list","USD","description","code","rate","console","log","e","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAa;AAAA;;AAAA,MAAVC,GAAU,QAAVA,GAAU;;AAAA,kBAEQF,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEjBG,QAFiB;AAAA,MAEPC,WAFO;;AAIxB,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAIF,QAAQ,KAAK,KAAjB,EAAwB;AACpBE,IAAAA,IAAI,GAAG;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACeH,GAAG,CAACA,GAAJ,CAAQI,GAAR,CAAYC,WAD3B,SAC0C;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCL,GAAG,CAACM,IAA3C,CAD1C,OACkG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASN,GAAG,CAACO,IAAb,CADlG,CAAP;AAGH,GAJD,MAIO,IAAGN,QAAQ,KAAK,KAAhB,EAAsB;AACzBE,IAAAA,IAAI,GAAG;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACWH,GAAG,CAACK,WADf,SAC8B;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCL,GAAG,CAACM,IAA3C,CAD9B,OACsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASN,GAAG,CAACO,IAAb,CADtF,CAAP;AAGH,GAJM,MAIA,IAAGN,QAAQ,KAAK,IAAhB,EAAqB;AACxBE,IAAAA,IAAI,GAAG;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACWH,GAAG,CAACK,WADf,SAC8B;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCL,GAAG,CAACM,IAA3C,CAD9B,OACsF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASN,GAAG,CAACO,IAAb,CADtF,CAAP;AAGH;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACC,IAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,aAAIR,WAAW,CAACD,QAAQ,gCAAGS,CAAC,CAACC,MAAF,CAASC,KAAZ,CAAT,CAAf;AAAA,KADZ;AAEC,IAAA,SAAS,EAAC,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIK;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJL,EAKK;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALL,EAMK;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANL,CADA,CADJ,CADJ;AAcH,CAlCD;;GAAMb,M;;KAAAA,M;AAoCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Prices = ({ bpi }) => {\r\n\r\n    const [currency, setCurrency] = useState('USD')\r\n\r\n    let list = '';\r\n    if (currency === 'USD') {\r\n        list = <li className=\"list-group-item\">\r\n            Bitcoin rate for {bpi.bpi.USD.description} : <span className=\"badge badge-primary\">{bpi.code}</span> <strong>{bpi.rate}</strong>\r\n        </li>\r\n    } else if(currency === 'GBP'){\r\n        list = <li className=\"list-group-item\">\r\n        Bitcoin rate for {bpi.description} : <span className=\"badge badge-primary\">{bpi.code}</span> <strong>{bpi.rate}</strong>\r\n    </li>\r\n    } else if(currency === 'EU'){\r\n        list = <li className=\"list-group-item\">\r\n        Bitcoin rate for {bpi.description} : <span className=\"badge badge-primary\">{bpi.code}</span> <strong>{bpi.rate}</strong>\r\n    </li>\r\n    }\r\n\r\n    console.log(bpi);\r\n    return (\r\n        <div>\r\n            <ul className=\"list-group\">\r\n            <select\r\n             onChange={e => setCurrency(currency = e.target.value)}\r\n             className=\"form-control\"\r\n             >\r\n                 <option value=\"USD\">USD</option>\r\n                 <option value=\"GBP\">GBP</option>\r\n                 <option value=\"EU\">EU</option>\r\n             </select>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Prices\r\n"]},"metadata":{},"sourceType":"module"}